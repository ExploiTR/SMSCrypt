package app.exploitr.sec.scrypt.ui.general;

import static app.exploitr.sec.scrypt.utils.Logger.LOG_STEP;

import android.content.DialogInterface;
import android.os.Bundle;
import android.text.Editable;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.Space;
import android.widget.Toast;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.navigation.NavController;
import androidx.navigation.Navigation;
import androidx.navigation.ui.AppBarConfiguration;
import androidx.navigation.ui.NavigationUI;

import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.snackbar.Snackbar;

import java.security.GeneralSecurityException;

import app.exploitr.sec.scrypt.R;
import app.exploitr.sec.scrypt.contacts.ContactManagerRealm;
import app.exploitr.sec.scrypt.database.ConfigPreferences;
import app.exploitr.sec.scrypt.database.LocalDatabase;
import app.exploitr.sec.scrypt.databinding.ActivityMainBinding;
import app.exploitr.sec.scrypt.databinding.MasterPwdReinBinding;

@SuppressWarnings("FieldCanBeLocal")
public class MainActivity extends AppCompatActivity {

    Snackbar bar;
    private ActivityMainBinding binding;
    private AlertDialog alertDialog;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setupContacts();
        alertDialog = createDialogue();
    }

    private void setupContacts() {
        var configPref = ConfigPreferences.getInstance(this);

        if (configPref.getNumOfContacts() == -1 || configPref.getContactLastUpdateTime() == 0) {
            ContactManagerRealm.updateDatabase(this, true, new ContactManagerRealm.ContactDatabaseListener() {
                @Override
                public void onStart() {
                    bar = Snackbar.make(MainActivity.this.getWindow().getDecorView(), "Caching Contacts...", Snackbar.LENGTH_INDEFINITE);
                    ViewGroup contentLay = (ViewGroup) bar.getView().findViewById(com.google.android.material.R.id.snackbar_text).getParent();
                    ProgressBar item = new ProgressBar(MainActivity.this);
                    contentLay.addView(item);
                    contentLay.addView(new Space(MainActivity.this, null), new ViewGroup.LayoutParams(16, 16));
                    bar.show();

                    LOG_STEP("Caching Contacts...");
                }

                @Override
                public void onLoadSuccess() {
                    Toast.makeText(MainActivity.this, "Contact cache updated!", Toast.LENGTH_SHORT).show();
                    launchUi(true);
                }

                @Override
                public void onLoadFailed() {
                    Toast.makeText(MainActivity.this, "Couldn't update contacts cache! Please enable permission.", Toast.LENGTH_LONG).show();
                    launchUi(false);
                    //todo
                    finish();
                }

                @Override
                public void onLoadFinish() {
                    bar.dismiss();
                }
            });
        } else {
            launchUi(true);
        }
    }

    private void launchUi(boolean loadSuccess) {
        binding = ActivityMainBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        setSupportActionBar(binding.fakeBar);

        if (getSupportActionBar() != null)
            getSupportActionBar().hide();

        BottomNavigationView navView = findViewById(R.id.nav_view);
        AppBarConfiguration appBarConfiguration = new AppBarConfiguration.Builder(
                R.id.navigation_chats, R.id.navigation_dashboard, R.id.navigation_pairing)
                .build();
        NavController navController = Navigation.findNavController(MainActivity.this, R.id.nav_host_fragment_activity_main);
        NavigationUI.setupActionBarWithNavController(MainActivity.this, navController, appBarConfiguration);
        NavigationUI.setupWithNavController(binding.navView, navController);
    }

    private AlertDialog createDialogue() {
        MasterPwdReinBinding binding = MasterPwdReinBinding.inflate(getLayoutInflater());

        binding.masterPwdReinReason.setText(getString(R.string.re_enter_km_key));

        AlertDialog dialog = new AlertDialog.Builder(MainActivity.this)
                .setView(binding.getRoot())
                .setCancelable(false)
                .setPositiveButton("Verify", null)
                .setTitle("Enter Master Password")
                .create();

        dialog.setOnShowListener(dialog_ -> dialog.getButton(AlertDialog.BUTTON_POSITIVE).setOnClickListener(v -> {
            try {
                Editable pass;
                if (((pass = binding.masterPwdReinInput.getText()) != null) && LocalDatabase.getInstance(getBaseContext())
                        .getMasterPasswordVerificationTestSuccess(pass.toString())) {
                    binding.masterPwdReinInput.setText("");
                    dialog_.dismiss();
                } else {
                    binding.masterPwdReinLayout.setError("Wrong encryption key!");
                }
            } catch (GeneralSecurityException e) {
                binding.masterPwdReinLayout.setError("Wrong encryption key!");
                e.printStackTrace();
            }
        }));

        binding.masterPwdReinInput.setText("12345678"); //todo remove

        dialog.setOnShowListener(ignored -> {
            dialog.getButton(DialogInterface.BUTTON_POSITIVE).performClick(); //todo remove
        });

        return dialog;
    }

    @Override
    protected void onResume() {
        if (alertDialog.isShowing() && !this.isFinishing()) {
            alertDialog.dismiss();
            alertDialog.show();
        } else if (!this.isFinishing()) {
            alertDialog.show();
        }
        super.onResume();
    }

    @Override
    protected void onPause() {
        if (alertDialog.isShowing())
            alertDialog.dismiss();
        super.onPause();
    }
}