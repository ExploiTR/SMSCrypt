package app.exploitr.sec.scrypt.ui.dashboard;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AlertDialog;
import androidx.fragment.app.Fragment;

import org.json.JSONObject;

import app.exploitr.sec.scrypt.database.LocalDatabase;
import app.exploitr.sec.scrypt.database.SettingsDatabase;
import app.exploitr.sec.scrypt.databinding.FragmentDashboardBinding;

public class DashboardFragment extends Fragment {

    private FragmentDashboardBinding binding;
    private AlertDialog scanView;

    public View onCreateView(@NonNull LayoutInflater inflater,
                             ViewGroup container, Bundle savedInstanceState) {
        binding = FragmentDashboardBinding.inflate(inflater, container, false);

        var sdb = SettingsDatabase.getInstance(getContext());

        binding.toggleSmsFilter.setChecked(sdb.getEnableFilter());
        binding.toggleRuleSmsFilter.setChecked(sdb.getEnableRuleFilter());
        binding.toggleContactBasedSmsFilter.setChecked(sdb.getEnableContactFilter());

        binding.toggleSmsFilter.setOnCheckedChangeListener((compoundButton, b) -> {
            if (b) {
                sdb.setEnableFilter(true);
            } else {
                binding.toggleRuleSmsFilter.setChecked(false);
                sdb.setEnableFilter(false);
            }
        });

        binding.toggleRuleSmsFilter.setOnCheckedChangeListener((compoundButton, b) -> {
            if (b) {
                if (sdb.getEnableFilter())
                    sdb.setEnableRuleFilter(true);
                else {
                    Toast.makeText(getContext(), "Enable Standard Filter first!", Toast.LENGTH_SHORT).show();
                    binding.toggleRuleSmsFilter.setChecked(false);
                    sdb.setEnableRuleFilter(false);
                }
            } else sdb.setEnableRuleFilter(false);
        });

        binding.toggleContactBasedSmsFilter.setOnCheckedChangeListener((compoundButton, b) -> {
            if (b) {
                if (sdb.getEnableFilter())
                    sdb.setEnableContactFilter(true);
                else {
                    Toast.makeText(getContext(), "Enable Standard Filter first!", Toast.LENGTH_SHORT).show();
                    binding.toggleContactBasedSmsFilter.setChecked(false);
                    sdb.setEnableContactFilter(false);
                }
            } else sdb.setEnableContactFilter(false);
        });

        return binding.getRoot();
    }

    @Nullable
    private String getData() {
        //get phone number
        var db = LocalDatabase.getInstance(getContext());
        String alias = db.getAlias();
        String contact = db.getPhone();

        JSONObject object = new JSONObject();
        try {
            // object.put(ContactModel.ALIAS_IDENTIFIER, alias);
            // object.put(ContactModel.CONTACT_IDENTIFIER, contact);
            return object.toString();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        binding = null;
    }
}