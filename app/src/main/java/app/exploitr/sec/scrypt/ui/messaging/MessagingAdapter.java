package app.exploitr.sec.scrypt.ui.messaging;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.constraintlayout.widget.ConstraintSet;
import androidx.recyclerview.widget.RecyclerView;

import java.text.SimpleDateFormat;
import java.util.Locale;

import app.exploitr.sec.scrypt.R;
import app.exploitr.sec.scrypt.databinding.ListMessageItemThreadBinding;
import app.exploitr.sec.scrypt.models.SMSModel;

public class MessagingAdapter extends RecyclerView.Adapter<MessagingAdapter.MessagingHolder> {

    private SMSModel[] listOfSMS;
    private final Context context;
    private MessageSelectListener listener;

    public MessagingAdapter(SMSModel[] messages, Context mContext) {
        listOfSMS = messages;
        context = mContext;
    }

    public MessagingAdapter setMessageSelectListener(MessageSelectListener messageSelectListener) {
        listener = messageSelectListener;
        return this;
    }

    public void smsUpdate(SMSModel[] newSMS) {
        listOfSMS = newSMS;
    }

    @NonNull
    @Override
    public MessagingHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        return new MessagingHolder(LayoutInflater.from(context).inflate(R.layout.list_message_item_thread, parent, false));
    }

    @Override
    public void onBindViewHolder(@NonNull MessagingHolder holder, int position) {
        ListMessageItemThreadBinding bind = holder.bind;
        SMSModel sms = listOfSMS[position];

//        if (profileImageUri != null) {
//            bind.profileImage.setImageURI(profileImageUri);
//        } else if (profile != null) {
//            bind.profileImage.setImageDrawable(profile);
//        }

        ConstraintSet set = new ConstraintSet();
        set.clone(bind.messageContainer);
        set.setHorizontalBias(bind.messageText.getId(), sms.getTYPE() == 1 ? 0f : 1f);
        set.setHorizontalBias(bind.messageTime.getId(), sms.getTYPE() == 1 ? 0f : 1f);
        set.applyTo(bind.messageContainer);

        //     bind.profileImage.setVisibility(sms.getTYPE() == 1 ? View.VISIBLE : View.INVISIBLE);
        bind.messageText.setText(sms.getBODY());
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM HH:mm", Locale.getDefault());
        bind.messageTime.setText(sdf.format(sms.getDATE()));

        bind.messageContainer.setOnClickListener(v -> listener.onClick(sms));
        bind.messageContainer.setOnLongClickListener(v -> {
            listener.onHoldClick(sms);
            return false;
        });
    }

    @Override
    public int getItemCount() {
        return listOfSMS.length;
    }

    public static class MessagingHolder extends RecyclerView.ViewHolder {
        ListMessageItemThreadBinding bind;

        public MessagingHolder(@NonNull View itemView) {
            super(itemView);
            bind = ListMessageItemThreadBinding.bind(itemView);
        }
    }

    interface MessageSelectListener {
        void onClick(SMSModel sms);

        void onHoldClick(SMSModel sms);
    }
}
