package app.exploitr.sec.scrypt;

import android.content.DialogInterface;
import android.os.Bundle;
import android.text.Editable;
import android.view.View;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.navigation.NavController;
import androidx.navigation.Navigation;
import androidx.navigation.ui.AppBarConfiguration;
import androidx.navigation.ui.NavigationUI;

import com.google.android.material.bottomnavigation.BottomNavigationView;

import java.security.GeneralSecurityException;

import app.exploitr.sec.scrypt.database.LocalDatabase;
import app.exploitr.sec.scrypt.databinding.ActivityMainBinding;
import app.exploitr.sec.scrypt.databinding.MasterPwdReinBinding;

@SuppressWarnings("FieldCanBeLocal")
public class MainActivity extends AppCompatActivity {

    private ActivityMainBinding binding;
    private AlertDialog alertDialog;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        binding = ActivityMainBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        setSupportActionBar(binding.fakeBar);
        if (getSupportActionBar() != null)
            getSupportActionBar().hide();

        BottomNavigationView navView = findViewById(R.id.nav_view);
        AppBarConfiguration appBarConfiguration = new AppBarConfiguration.Builder(
                R.id.navigation_chats, R.id.navigation_dashboard, R.id.navigation_notifications)
                .build();
        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment_activity_main);
        NavigationUI.setupActionBarWithNavController(this, navController, appBarConfiguration);
        NavigationUI.setupWithNavController(binding.navView, navController);

        alertDialog = createDialogue();
    }

    private AlertDialog createDialogue() {
        MasterPwdReinBinding binding = MasterPwdReinBinding.inflate(getLayoutInflater());

        binding.masterPwdReinReason.setText("You resumed/opened the application, master encryption key must be re-entered.");

        AlertDialog dialog = new AlertDialog.Builder(MainActivity.this)
                .setView(binding.getRoot())
                .setCancelable(false)
                .setPositiveButton("Verify", null)
                .setTitle("Enter Master Password")
                .create();

        dialog.setOnShowListener(dialog_ -> dialog.getButton(AlertDialog.BUTTON_POSITIVE).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try {
                    Editable pass = null;
                    if (((pass = binding.masterPwdReinInput.getText()) != null) && LocalDatabase.getInstance(getBaseContext())
                            .getMasterPasswordVerificationTestSuccess(pass.toString())) {
                        binding.masterPwdReinInput.setText("");
                        dialog_.dismiss();
                    } else {
                        binding.masterPwdReinLayout.setError("Wrong encryption key!");
                    }
                } catch (GeneralSecurityException e) {
                    binding.masterPwdReinLayout.setError("Wrong encryption key!");
                    e.printStackTrace();
                }
            }
        }));

        binding.masterPwdReinInput.setText("12345678"); //todo remove

        dialog.setOnShowListener(new DialogInterface.OnShowListener() {
            @Override
            public void onShow(DialogInterface dialogz) {
                dialog.getButton(DialogInterface.BUTTON_POSITIVE).performClick(); //todo remove
            }
        });

        return dialog;
    }

    @Override
    protected void onResume() {
        if (alertDialog.isShowing() && !this.isFinishing()) {
            alertDialog.dismiss();
            alertDialog.show();
        } else if (!this.isFinishing()) {
            alertDialog.show();
        }
        super.onResume();
    }

    @Override
    protected void onPause() {
        if (alertDialog.isShowing())
            alertDialog.dismiss();
        super.onPause();
    }
}