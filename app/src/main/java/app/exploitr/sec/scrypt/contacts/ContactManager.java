package app.exploitr.sec.scrypt.contacts;

import static contacts.core.ContactsKt.Contacts;

import android.content.Context;
import android.os.Handler;
import android.os.Looper;

import java.util.Spliterator;

import contacts.core.entities.Contact;

public class ContactManager {

    public static void getAllContactsArray(Context context, ContactArrayLoadingListener listener) {
        new Thread(new Runnable() {
            @Override
            public void run() {
                var contacts = Contacts(context)
                        .query()
                        .find()
                        .toArray(new Contact[0]);
                new Handler(Looper.getMainLooper()).post(() -> listener.onLoadComplete(contacts));
            }
        }).start();
    }

    public static Spliterator<Contact> getAllContactsIterator(Context context) {
        return Contacts(context).query().find().spliterator();
    }

    public static void searchContacts(Context context, String query, ContactArrayLoadingListener listener) {
        new Thread(new Runnable() {
            @Override
            public void run() {
                var contacts = Contacts(context).broadQuery().wherePartiallyMatches(query).find().toArray(new Contact[0]);
                new Handler(Looper.getMainLooper()).post(() -> listener.onLoadComplete(contacts));
            }
        }).start();
    }

    public interface ContactArrayLoadingListener {
        void onLoadComplete(Contact[] contacts);
    }

    interface ContactSpliteratorLoadingListener {
        void onLoadComplete(Spliterator<Contact> contacts);
    }
}
