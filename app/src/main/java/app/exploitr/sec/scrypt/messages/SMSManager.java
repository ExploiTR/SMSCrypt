package app.exploitr.sec.scrypt.messages;

import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.os.Handler;
import android.os.Looper;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

public class SMSManager {
    final static String SMS_URI_INBOX = "content://sms";
    final static String[] SMS_PROJECTION = new String[]{"_id", "thread_id", "address", "date", "date_sent", "read", "type", "reply_path_present", "body", "sub_id", "creator"};

    public static void getSortedSMSList(Context context, boolean mode, SMSListListener listener) {
        new Thread(() -> {
            List<SMSModel> smsList = getAllSms(context, mode);
            Hashtable<Integer, SMSModel[]> tempTable = new Hashtable<>();
            for (SMSModel model : smsList) {
                if (tempTable.containsKey(model.getTHREAD())) {
                    var list = tempTable.get(model.getTHREAD());
                    if (list == null) continue;
                    var temp = new SMSModel[]{model};
                    System.arraycopy(list, 0, temp, 1, list.length - 1);
                    tempTable.put(model.getTHREAD(), temp);
                } else {
                    tempTable.put(model.getTHREAD(), new SMSModel[]{model});
                }
            }
            new Handler(Looper.getMainLooper()).post(() -> listener.onComplete(tempTable, smsList));
        }).start();
    }

    public static List<SMSModel> getAllSms(Context context, boolean enableFilter) {
        List<SMSModel> sms_list = new ArrayList<>();
        Uri uri = Uri.parse(SMS_URI_INBOX);
        Cursor cur = context.getContentResolver().query(uri, SMS_PROJECTION, null, null, "date asc");
        if (cur != null && cur.getCount() > 0) {
            cur.moveToFirst();
            do {
                if (!enableFilter || !isBankActivationSMS(cur.getString(8))) { //filter UPIACT // MBACTIVATE
                    sms_list.add(generateModel(cur.getInt(0), cur.getInt(1), cur.getString(2), cur.getLong(3), cur.getLong(4), cur.getInt(5), cur.getInt(6), cur.getString(8)));
                }
            } while (cur.moveToNext());
            cur.close();
        }
        return sms_list;
    }

    //todo : have to add all kind of bank :(
    private static boolean isBankActivationSMS(String body) {
        return body.contains("MBACTIVATE") || body.contains("UPIACT") || body.contains("HDFCUPI") || body.contains("SBIREG") || body.contains("PHONEPE-SMS-VERIFY");
    }

    public static List<SMSModel> searchSMS(Context context, String query) {
        List<SMSModel> sms_list = new ArrayList<>();
        Uri uri = Uri.parse(SMS_URI_INBOX);
        Cursor cur = context.getContentResolver().query(uri, SMS_PROJECTION, "address=" + query, null, "date asc");
        if (cur != null && cur.getCount() > 0) {
            cur.moveToFirst();
            do {
                sms_list.add(generateModel(cur.getInt(0), cur.getInt(1), cur.getString(2), cur.getLong(3), cur.getLong(4), cur.getInt(5), cur.getInt(6), cur.getString(7)));
            } while (cur.moveToNext());
            String address = cur.getString(1);
            cur.close();
        }
        return sms_list;
    }

    public static SMSModel generateModel(int _id, int thread_, String address, long date, long date_sent, int read, int type, String body) {
        SMSModel model = new SMSModel();
        model.setID(_id);
        model.setTHREAD(thread_);
        model.setADDRESS(address);
        model.setDATE(date);
        model.setDATE_SENT(date_sent);
        model.setREAD(read);
        model.setTYPE(type);
        model.setBODY(body);
        return model;
    }

    public interface SMSListListener {
        void onComplete(Hashtable<Integer, SMSModel[]> data, List<SMSModel> unSortedData);
    }
}
